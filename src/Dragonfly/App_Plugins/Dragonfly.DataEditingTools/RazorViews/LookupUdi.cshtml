@inherits UmbracoViewPage<PageData<UdiLookupResult>>
@{
	Layout = "_Master.cshtml";
	var status = Model;
	var lookupResult = Model.DataModel;

	var formInputs = Dragonfly.UmbracoHelpers.Mvc.GetSafeViewData(ViewData, "FormInputs") as FormInputsUdiLookup;

	//Column Widths
	var col1Class = "col-sm-3";
	var col2Class = "col-sm-9";

	var pvForm = ViewHelpers.GetViewsPath() + "Partials/FormUdiLookup.cshtml";
	
	var mode = "Setup";
	if (lookupResult != null)
	{
		mode = "Display";
	}

}

<h2>Udi Lookup</h2>

<div class="card card-default">
	<h5 class="card-header">Criteria</h5>
	<div class="card-body">
		<dl class="row">
			<dt class="@col1Class">Udi | Guid</dt>
			<dd class="@col2Class">
				@if (lookupResult != null)
				{
					<span>@lookupResult.LookupCriteria.Udi | @lookupResult.LookupCriteria.Guid</span>
				}
				else
				{
					<span>@formInputs.Udi | @formInputs.Guid</span>
				}
			</dd>
		</dl>
		<dl class="row">
			<dt class="@col1Class">Object Type</dt>
			<dd class="@col2Class">
				@if (lookupResult != null)
				{
					<span>@lookupResult.LookupCriteria.ObjectType</span>
				}
				else
				{
					<span>@formInputs.ObjectType</span>
				}

			</dd>
		</dl>
	</div>
</div>

@if (mode != "Setup")
{
	<h5>Lookup Result</h5>

	if (lookupResult != null)
	{
		switch (lookupResult.Status)
		{
			case Enums.LookupStatus.NotSearchedYet:
				<div class="alert alert-info" role="alert">
					Not yet searched
				</div>
				break;

			case Enums.LookupStatus.SearchInProgress:
				<div class="alert alert-info" role="alert">
					Search in Progress...
				</div>
				break;

			case Enums.LookupStatus.ObjectFound:
				<div class="alert alert-success" role="alert">
					<strong> @lookupResult.ObjectTypeDisplayName</strong> : <span> @lookupResult.Name - # @lookupResult.Id</span>
				</div>
				break;

			case Enums.LookupStatus.ObjectNotFound:
				<div class="alert alert-warning" role="alert">
					<strong>No matching object found of type @lookupResult.ObjectTypeDisplayName with GUID @lookupResult.Guid.ToString()</strong>
				</div>
				break;

			case Enums.LookupStatus.Error:
				<div class="alert alert-danger" role="alert">
					<strong>Error</strong> : <span>@lookupResult.ErrorMsg</span>
				</div>
				break;

			case Enums.LookupStatus.ObjectTypeNotSupported:
				<div class="alert alert-warning" role="alert">
					<strong>@Html.Raw(lookupResult.ErrorMsg)</strong>
				</div>
				break;

			default:
				throw new ArgumentOutOfRangeException();
		}

	}
	else
	{
		<div class="alert alert-danger" role="alert">
			Something went wrong - Lookup Result is missing data
		</div>
	}
}

@await Html.PartialAsync(pvForm, formInputs)


@*	@section FooterScripts {
	<script type="text/javascript">
	$(document).ready(function () {

	// Setup - add a text input to each footer cell
	$('#umbracodata tfoot th').each(function () {
	var title = $(this).text();
	$(this).html('<input type="text" placeholder="Search ' + title + '" />');
	});

	$('#umbracodata').DataTable({
	"lengthMenu": [[10, 25, 50, - 1], [10, 25, 50, "All"]]
	});

	// Apply the search
	table.columns().every(function () {
	var that = this;

	$('input', this.footer()).on('keyup change', function () {
	if (that.search() !== this.value) {
	that
	.search(this.value)
	.draw();
	}
	});
	});

	});
	</script>}*@

