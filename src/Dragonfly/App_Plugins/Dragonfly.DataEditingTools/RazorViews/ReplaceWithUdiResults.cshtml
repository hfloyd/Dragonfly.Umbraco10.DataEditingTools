@inherits UmbracoViewPage<StatusMessage>
@{
	Layout = "_Master.cshtml";
	var status = Model;

    var SpecialMessage = Dragonfly.UmbracoHelpers.Mvc.GetSafeViewDataString(ViewData, "SpecialMessage");
    var SpecialMessageClass = Dragonfly.UmbracoHelpers.Mvc.GetSafeViewDataString(ViewData, "SpecialMessageClass");

    //var FormInputs = Dragonfly.UmbracoHelpers.Mvc.GetSafeViewData(ViewData, "FormInputs") as FormInputsFindReplace;
    var FindReplaceResults = Dragonfly.UmbracoHelpers.Mvc.GetSafeViewData(ViewData, "FindReplaceResults") as FindReplaceResultsSet;
    //var AffectedContentNodes = Dragonfly.UmbracoHelpers.Mvc.GetSafeViewData(ViewData, "AffectedContentNodes") as IEnumerable<IContent>;
    //var ResultSetDisplayName = Dragonfly.UmbracoHelpers.Mvc.GetSafeViewDataString(ViewData, "ResultSetDisplayName");
    //var SearchPhrase = Dragonfly.UmbracoHelpers.Mvc.GetSafeViewDataString(ViewData, "SearchPhrase");


    //Column Widths
    var col1Class = "col-sm-3";
    var col2Class = "col-sm-9";

    var pvException = ViewHelpers.GetViewsPath() + "Partials/ExceptionDetailsLink.cshtml";
    var pvSS = ViewHelpers.GetViewsPath() + "Partials/StylesScripts.cshtml";
    var pvStatus = ViewHelpers.GetViewsPath() + "Partials/StatusMessage.cshtml";
    var pvFormReplaceWithUdis = ViewHelpers.GetViewsPath() + "Partials/FormReplaceWithUdis.cshtml";
}
<!DOCTYPE html>
<html>
<head>
    @Html.Partial(pvSS, "styles")
</head>
<body>
    <div class="container-fluid">

        <div class="d-inline-flex p-2" style="padding: .5em 0;">
            <a class="btn btn-sm btn-primary mr-2" href="/umbraco/backoffice/Dragonfly/DataEditingTools/Start">Back to Start</a>
            @*<a class="btn btn-sm btn-info mr-2" href="@baseUrl">Remove All Filters</a>*@
            @*<a class="btn btn-sm btn-success mr-2" href="xx">XX</a>*@
        </div>

        <h1>Dragonfly Transformation 7 to 8 Helpers</h1>

        @if (!status.Success)
        {
            @Html.Partial(pvStatus, status)
        }
        else
        {
            if (SpecialMessage != "")
            {
                <div class="p-3 mb-2 @SpecialMessageClass text-white">
                    @Html.Raw(SpecialMessage)
                </div>
            }
        }

        <h3>Current Options for Udi Replacement</h3>
        <div class="card card-default">
            <h5 class="card-header">Criteria</h5>
            <div class="card-body">
                <dl class="row">
                    <dt class="@col1Class">Type</dt>
                    <dd class="@col2Class">@FindReplaceResults.Type.ToString()</dd>
                </dl>
                <dl class="row">
                    <dt class="@col1Class">Multi-Select Property</dt>
                    <dd class="@col2Class">@FindReplaceResults.FormInputs.FullPropertyIsMultiple</dd>
                </dl>
                <dl class="row">
                    <dt class="@col1Class">Preview Only?</dt>
                    <dd class="@col2Class">@FindReplaceResults.FormInputs.PreviewOnly</dd>
                </dl>
                <dl class="row">
                    <dt class="@col1Class">Property Aliases</dt>
                    <dd class="@col2Class">
                        <ul>
                            @foreach (var alias in FindReplaceResults.PropertyAliases)
                            {
                                <li>@alias</li>
                            }
                        </ul>
                    </dd>
                </dl>
                <dl class="row">
                    <dt class="@col1Class">Number of Affected Nodes</dt>
                    <dd class="@col2Class">@FindReplaceResults.Results.Count()</dd>
                </dl>
                <dl class="row">
                    <dt class="@col1Class">Content Has Been Updated?</dt>
                    <dd class="@col2Class">@FindReplaceResults.DataUpdatedAndSaved</dd>
                </dl>
            </div>
        </div>

        @if (!FindReplaceResults.DataUpdatedAndSaved)
        {
            <h3 class="mt-2">PREVIEW of Content Nodes Changes</h3>
        }
        else
        {
            <h3 class="mt-2">Content Nodes UPDATED</h3>
        }

        @if (FindReplaceResults.Results.Any())
        {
            var counter = 0;
            <table id="umbracodata" class="table table-striped table-bordered table-hover table-sm" cellspacing="0">
                <thead>
                    <tr>
                        <th>#</th>
                        <th>Node Id</th>
                        <th>Node Name</th>
                        <th>Node Is Published</th>
                        <th>Property Alias</th>
                        <th>Original Data Format</th>
                        <th>Node Match was Found?</th>
                        <th>Original Property Value</th>
                        <th>Updated Property Value</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var result in FindReplaceResults.Results)
                    {
                        var node = result.ContentNode;
                        var urlBackoffice = string.Format("/umbraco/#/content/content/edit/{0}", node.Id.ToString());

                        counter++;
                        var rowClass = result.ContentUpdated == true ? "table-success" : "";
                        var origData = result.OriginalPropertyData;
                        var newData = result.NewPropertyData;

                        <tr class="@rowClass">
                            <td>@counter</td>
                            <td><a href="@urlBackoffice" target="_blank">@node.Id</a></td>
                            <td>@node.Name</td>
                            <td>@node.Published</td>
                            <td>@result.PropertyAlias</td>
                            <td>@result.CurrentDataFormat</td>
                            <td>@result.MatchFound</td>
                            <td>@origData</td>
                            <td>@newData</td>
                        </tr>
                    }

                </tbody>
            </table>
        }
        else
        {
            <i style="color:red;">There is no data available currently.</i>
        }

        @Html.Partial(pvFormReplaceWithUdis, FindReplaceResults.FormInputs)

    </div>

    @Html.Partial(pvSS, "scripts")

    <script type="text/javascript">
        $(document).ready(function () {

            // Setup - add a text input to each footer cell
            $('#umbracodata tfoot th').each(function () {
                var title = $(this).text();
                $(this).html('<input type="text" placeholder="Search ' + title + '" />');
            });

            $('#umbracodata').DataTable({
                "lengthMenu": [[10, 25, 50, - 1], [10, 25, 50, "All"]]
            });

            // Apply the search
            table.columns().every(function () {
                var that = this;

                $('input', this.footer()).on('keyup change', function () {
                    if (that.search() !== this.value) {
                        that
                            .search(this.value)
                            .draw();
                    }
                });
            });
        });
    </script>
</body>
</html>
